*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Montserrat', sans-serif;
    font-family: 'Roboto', sans-serif;
}

body {
    background: linear-gradient(#041C32,#04293A,#13597c);
    /* display: flex; */
    width: 100%;
    height: 100vh;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    /* Affect the distance between the Z plane and the user: */
    perspective: 1000px;
  }

  #dicebutton .btn-primary{
    font-weight: bold;
    background-color: rgba(4, 28, 50, 0.74);
    border: 5px solid #041C32;
  }
  
  #dicebutton .btn-primary:hover{
    background-color: #041C32;
  }
  
  #dice {
    width: 100px;
    height: 100px;
    /* Position the children of #dice in the 3D space: */
    transform-style: preserve-3d;
    transition: transform 1.5s ease;
  }

  .container_all{
    height: 100vh;
    width: 100vw;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
  }
  
  #numero.col, #numero_2.col, #result_part{
    color: white;
    font-size: 1.2em;
    font-weight: 500;
  }

  #result_game.col{
    color: greenyellow;
    font-size: 2.3em;
    font-weight: 600;
  }

  .row_result{
    height: 10em;
  }

  .sides {
    border-radius: 15px;
    background-color: linen;
    position: absolute;
    width: 100%;
    height: 100%;
  }
  
  .dot {
    position: absolute;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background: radial-gradient(#4b66dd80,#064c6dad,#062331);
    transform: translate(-50%, -50%);
  }
  
  /* The placement of each dot: */
  /* Dot 1 from slide 1: */
  .side-1 .dot-1 {
    top: 50%;
    left: 50%;
  }
  /* Dot 1 from slide 2: */
  .side-2 .dot-1 {
    top: 25%;
    left: 25%;
  }
  /*...and so on: */
  .side-2 .dot-2 {
    top: 75%;
    left: 75%;
  }
  .side-3 .dot-1 {
    top: 25%;
    left: 25%;
  }
  .side-3 .dot-2 {
    top: 75%;
    left: 75%;
  }
  .side-3 .dot-3 {
    top: 50%;
    left: 50%;
  }
  .side-4 .dot-1 {
    top: 25%;
    left: 25%;
  }
  .side-4 .dot-2 {
    top: 25%;
    left: 75%;
  }
  .side-4 .dot-3 {
    top: 75%;
    left: 25%;
  }
  .side-4 .dot-4 {
    top: 75%;
    left: 75%;
  }
  .side-5 .dot-1 {
    top: 25%;
    left: 25%;
  }
  .side-5 .dot-2 {
    top: 25%;
    left: 75%;
  }
  .side-5 .dot-3 {
    top: 75%;
    left: 25%;
  }
  .side-5 .dot-4 {
    top: 75%;
    left: 75%;
  }
  .side-5 .dot-5 {
    top: 50%;
    left: 50%;
  }
  .side-6 .dot-1 {
    top: 25%;
    left: 25%;
  }
  .side-6 .dot-2 {
    top: 25%;
    left: 75%;
  }
  .side-6 .dot-3 {
    top: 75%;
    left: 25%;
  }
  .side-6 .dot-4 {
    top: 75%;
    left: 75%;
  }
  .side-6 .dot-5 {
    top: 50%;
    left: 25%;
  }
  .side-6 .dot-6 {
    top: 50%;
    left: 75%;
  }
  
  /* How does a cube look? */
  .side-1 {
    transform: translateZ(45px);
  }
  .side-2 {
    transform: rotateX(-180deg) translateZ(45px);
  }
  .side-3 {
    transform: rotateY(90deg) translateZ(45px);
  }
  .side-4 {
    transform: rotateY(-90deg) translateZ(45px);
  }
  .side-5 {
    transform: rotateX(90deg) translateZ(45px);
  }
  .side-6 {
    transform: rotateX(-90deg) translateZ(45px);
  }
  
  /* Cube's default mode in space: */
  #dice[data-side="1"] {
    transform: rotateX(260deg) rotateY(360deg) rotateZ(720deg);
  }
  #dice[data-side="2"] {
    transform: rotateX(360deg) rotateY(540deg) rotateZ(720deg);
  }
  #dice[data-side="3"] {
    transform: rotateX(360deg) rotateY(630deg) rotateZ(720deg);
  }
  #dice[data-side="4"] {
    transform: rotateX(360deg) rotateY(450deg) rotateZ(720deg);
  }
  #dice[data-side="5"] {
    transform: rotateX(630deg) rotateY(360deg) rotateZ(720deg);
  }
  #dice[data-side="6"] {
    transform: rotateX(450deg) rotateY(360deg) rotateZ(720deg);
  }
  
  /* What happens when the reRoll class is added after the dice is clicked: */
  #dice[data-side="1"].roll {
    transform: rotateX(0deg) rotateY(180deg) rotateZ(0deg);
  }
  #dice[data-side="2"].roll {
    transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);
  }

  #dice[data-side="3"].roll {
    transform: rotateX(0deg) rotateY(90deg) rotateZ(0deg);
  }
  #dice[data-side="4"].roll {
    transform: rotateX(0deg) rotateY(270deg) rotateZ(0deg);
  }
  #dice[data-side="5"].roll {
    transform: rotateX(90deg) rotateY(0deg) rotateZ(0deg);
  }
  #dice[data-side="6"].roll {
    transform: rotateX(270deg) rotateY(0deg) rotateZ(0deg);
  }
  
  /*
  ~ Adding some transparency so you can take a peek at the front slide.
  ~ hsla() expresses a given color according to its hue, saturation, and lightness.
  */

  #dice:hover {
    cursor: pointer;
  }

  #dicetwo:hover {
    cursor: pointer;
  }
  
  